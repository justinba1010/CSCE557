from curve import Curve
from point import Point
from random import randint
def transform_points_to_Points(points, curve):
    return [Point(x,y,1,curve) for (x,y) in points]

curve = Curve(1,1,31)
p1 = Point(0,1,1,curve)
expected = [
    (0,1),
    (8, 26),
    (10,22),
    (22,21),
    (17,23),
    (19,20),
    (13,17),
    (23,16),
    (12,6),
    (28,8),
    (5,21),
    (11,17),
    (7,17),
    (21,13),
    (4,10),
    (3,0),
    (4,21),
    (21,18),
    (7,14),
    (11,14),
    (5,10),
    (28,23),
    (12,25),
    (23,15),
    (13,14),
    (19,11),
    (17,8),
    (22,10),
    (21,9),
    (8,5),
    (0,30)
]
expected = transform_points_to_Points(expected, curve)
expected = [Point.infinity()] + expected + [Point.infinity()]
actual = [p1 * k for k in range(0,34)]
for actuality in actual:
    actuality.convert_to_affine()

def printpoints(points1, points2):
    s = "\n".join([str(i) + "p:\t\t" + str(p) + " | " + str(x) for (i,(p,x)) in enumerate(zip(points1, points2))])
    print(s)

printpoints(expected, actual)
